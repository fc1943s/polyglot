#!meta

{"kernelInfo":{"defaultKernelName":"spiral","items":[]}}

#!markdown

# common

#!spiral

// // test

open testing

#!markdown

## pair

#!spiral

inl pair x y =
    x, y

#!spiral

// // test

pair 1i32 2i32
|> _equal (1, 2)

#!markdown

## ||>

#!spiral

inl (||>) (arg1, arg2) fn = arg2 |> fn arg1

#!spiral

// // test

(3i32, 2i32)
||> fun a b => a - b
|> _equal 1

#!markdown

## flip

#!spiral

inl flip fn a b =
    fn b a

#!spiral

// // test

(1i32, 2i32)
||> flip pair
|> _equal (2, 1)

#!markdown

## join_body

#!spiral

inl join_body body acc x =
    if var_is x |> not
    then body acc x
    else
        inl acc = dyn acc
        join body acc x

#!spiral

// // test

inl rec fold_list f s = function
    | Cons (x, x') => fold_list f (f s x) x'
    | Nil => s

#!spiral

// // test

[5i32; 4; join 3; 2; 1]
|> fold_list (+) 0
|> _equal 15

#!spiral

// // test

[5i32; 4; join 3; 2; 1]
|> fold_list (join_body (+)) 0
|> _equal 15

#!markdown

## join_body_unit

#!spiral

inl join_body_unit body d x =
    if var_is d |> not
    then body x
    else
        inl x = dyn x
        join body x

#!spiral

// // test

[5i32; 4; join 3; 2; 1]
|> fold_list (fun acc n => join_body_unit ((+) acc) n n) 0
|> _equal 15

#!markdown

## run_target

#!spiral

union target =
    | Rust
    | Fsharp

inl run_target (fn : target -> (() -> _)) =
    inl rust_fn = fn Rust
    inl fsharp_fn = fn Fsharp

    $"#if FABLE_COMPILER_RUST"
    $"!rust_fn ()"
    $"#else"
    $"!fsharp_fn ()"
    $"#endif"

#!markdown

## format_debug

#!spiral

inl format_debug x =
    $"$\"%A{!x}\"" : string

#!markdown

## nameof

#!spiral

inl nameof x : string =
    $"nameof !x"

#!markdown

## obj_to_string

#!spiral

inl obj_to_string x : string =
    $"!x.ToString ()"

#!markdown

## get_environment_variable

#!spiral

inl get_environment_variable (var : string) : string =
    $"System.Environment.GetEnvironmentVariable !var"
