// // # optionm

// // ## default_value

inl default_value d = optionm.defaultWith d

// // ## default_with

inl default_with fn = function Some x => x | None => fn ()

// // ## choose

inl choose fn a b =
    match a, b with
    | Some x, Some y => fn x y |> Some
    | _ => None

// // ## iter

inl iter fn = function
    | Some x => fn x
    | None => ()

// // ## option_fsharp

nominal option_fsharp t = $"`t option"

inl from_fsharp forall t. (x : option_fsharp t) : option t =
    inl some x : option t = Some x
    inl none : option t = None
    $"!x |> Option.map !some |> Option.defaultValue !none"

inl to_fsharp forall t. (x : option t) : option_fsharp t =
    match x with
    | Some x => $"Some !x"
    | None => $"None"
