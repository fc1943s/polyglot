open rust_operators

union menu_tab =
    | History
    | Settings

inl content () : _ leptos.div =
    inl view_accordion = leptos.accordion "View" fun () =>
        leptos.view_map_grid fun () =>
            leptos.grid_pair
                { class = $'"items-center"' }
                ("Dark Mode" |> leptos.text_view |> leptos.view_to_fragment)
                (dark_mode_toggle.dark_mode_toggle () |> leptos.element_to_fragment)
            |> leptos.element_to_fragment

    inl connection_accordion = leptos.accordion "Connection" fun () =>
        leptos.view_map_grid fun () =>
            leptos.grid_pair
                { class = $'"items-baseline"' }
                ("Explorer Backend Host" |> leptos.text_view |> leptos.view_to_fragment)
                (explorer_backend_host_input.explorer_backend_host_input () |> leptos.element_to_fragment)
            |> leptos.element_to_fragment

    inl history () =
        "" |> leptos.text_view

    inl settings () =
        ;[
            view_accordion |> leptos.element_to_view
            connection_accordion |> leptos.element_to_view
        ]
        |> leptos.views_to_view

    inl location = leptos.use_location ()

    let (args, set_args) =
        { tab = History }
        |> leptos.create_signal

    leptos.create_effect fun () =>
        inl args_log = args |> leptos.signal_get |> sm'.format_pretty

        leptos.log $'"ui.content () / effect / args: " + string !args_log + ""'

    leptos.create_effect fun () =>
        inl hash = location |> leptos.location_hash |> leptos.memo_get
        inl hash = hash |> sm'.strip_prefix '#' |> optionm'.unwrap_or #""
        inl hash_url = hash |> leptos.url_try_from

        inl hash_url = hash_url |> resultm.unwrap

        inl hash_url_log = hash_url |> sm'.format_pretty
        leptos.log $'"ui.content () / effect / hash_url: " + string !hash_url_log + ""'

        inl tab =
            if hash_url |> leptos.url_pathname |> sm'.starts_with ("/settings" |> sm'.to_std_string)
            then Settings
            else History
        inl tab_log = tab |> sm'.format_pretty

        leptos.log $'"ui.content () / effect / new_tab: " + string !tab_log + ""'

        { tab } |> leptos.signal_set set_args

    inl nav tab : _ leptos.nav =
        leptos.nav [
            $'"class=\\\"-mb-px flex [flex-flow:wrap] [flex-grow:1] [flex-shrink:0] gap-[3px] [overflow-wrap:anywhere]\\\""'
            $'"aria-label=\\\"Tabs\\\""'
        ] fun () =>
            ;[
                leptos.tab_link "#/history" (leptos.history_svg ()) "History" (fun () => tab () = History)
                |> leptos.element_to_view

                leptos.tab_link "#/settings" (leptos.settings_svg ()) "Settings" (fun () => tab () = Settings)
                |> leptos.element_to_view
            ]
            |> leptos.views_to_fragment

    inl tabs_label tab =
        leptos.div [
            $'"class=\\\"hidden\\\""'
        ] fun () =>
            ;[
                leptos.label [
                    $'"for=\\\"Tab\\\""'
                    $'"class=\\\"sr-only\\\""'
                ] fun () =>
                    "Tab" |> leptos.text_fragment
                |> leptos.element_to_view

                leptos.select [
                    $'"id=\\\"Tab\\\""'
                    $'"class=\\\"w-full rounded-md border-gray-200\\\""'
                ] fun () =>
                    ;[
                        leptos.option' (fun () => tab () = History) "History" |> leptos.element_to_view
                        leptos.option' (fun () => tab () = Settings) "Settings" |> leptos.element_to_view
                    ]
                    |> leptos.views_to_fragment
                |> leptos.element_to_view
            ]
            |> leptos.views_to_fragment

    inl tabs tab =
        leptos.div [
            $'"class=\\\"flex flex-1\\\""'
        ] fun () =>
            leptos.div [
                $'"class=\\\"flex flex-1 [align-items:flex-end]\\\""'
            ] fun () =>
                ;[
                    tabs_label tab |> leptos.element_to_view

                    leptos.div [
                        $'"class=\\\"flex flex-1 [overflow-x:auto] [overflow-y:hidden]\\\""'
                    ] fun () =>
                        leptos.div [
                            $'"class=\\\"flex flex-1 border-t border-gray-200\\\""'
                        ] fun () =>
                            nav tab
                            |> leptos.element_to_fragment
                        |> leptos.element_to_fragment
                    |> leptos.element_to_view
                ]
                |> leptos.views_to_fragment
            |> leptos.element_to_fragment

    leptos.div [
        $'"class=\\\"bg-gray-50 flex flex-1 flex-col items-stretch min-h-screen text-gray-700 text-sm\\\""'
    ] fun () =>
        inl tab () =
            leptos.signal_get args .tab
        ;[
            rust.move tab fun tab =>
                match tab with
                | History => history ()
                | Settings => settings ()
                | _ => ;[] |> leptos.views_to_view
            |> leptos.closure_to_view

            tabs tab |> leptos.element_to_view
        ]
        |> leptos.views_to_fragment
