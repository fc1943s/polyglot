open rust_operators

inl render () =
    leptos.log $'"app.render ()"'

    leptos.provide_meta_context ()

    inl global_state : state.global_state =
        heap {
            core_state =
                leptos.create_rw_signal <|
                    heap {
                        dark_mode = leptos.create_rw_signal false
                        debug = leptos.create_rw_signal false
                        url_hash = leptos.create_rw_signal ("" |> sm'.to_std_string)
                    }
            state =
                leptos.create_rw_signal <|
                    heap {
                        explorer_backend_host =
                            "../../near/explorer_backend_host.txt"
                            |> sm'.include_str
                            |> sm'.ref_to_std_string
                            |> leptos.create_rw_signal
                    }
            loading = mapm.new_hash_map () |> leptos.create_rw_signal
        }

    fun () =>
        open state
        real leptos.provide_context `global_state global_state
    |> fun x => x ()

    inl route' path view =
        leptos.route
            path
            fun () =>
                view () |> leptos.element_to_fragment
            fun () =>
                ;[] |> leptos.views_to_fragment

    leptos.router fun () =>
        leptos.routes fun () =>
            ;[
                route' "" fun () => home.render { router = 1 }
                route' "/" fun () => home.render { router = 2 }
                route' "/*" fun () => home.render { router = 3 }
                route' "*" fun () => home.render { router = 4 }
            ]
            |> leptos.views_to_fragment
        |> leptos.view_to_fragment
